//link => https://codeforces.com/problemset/problem/230/B
//sol
import java.math.BigInteger;
import java.util.Locale;
import java.util.*;
import java.io.*;
 
public class Main {
    public static List primeArr = new ArrayList();
    void sieveOfEratosthenes(int n) {
        boolean prime[] = new boolean[n + 1];
        for (int i = 0; i <= n; i++)
            prime[i] = true;
        for (int p = 2; p * p <= n; p++) {
            if (prime[p] == true) {
                for (int i = p * p; i <= n; i += p)
                    prime[i] = false;
            }
        }
        for (int i = 2; i <= n; i++) {
            if (prime[i] == true)
                primeArr.add(i);
        }
    }
 
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        Main g = new Main();
        int t = sc.nextInt();
        long maxVal = 0;
        long arr[] = new long[t];
        for(int i = 0 ; i < t ; i++){
            long temp = sc.nextLong();
            maxVal = Math.max(maxVal,temp);
            arr[i] = temp;
        }
        double sqP = Math.sqrt(maxVal);
        g.sieveOfEratosthenes((int)sqP);
        for(long i : arr){
            double k = Math.sqrt(i);
            if(Collections.binarySearch(primeArr,(int)k) >= 0 && k % 1 == 0 ){
                System.out.println("YES");
            }else{
                System.out.println("NO");
            }
        }
 
    }
}
 