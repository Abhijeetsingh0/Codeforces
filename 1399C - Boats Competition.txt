//link => https://codeforces.com/problemset/problem/1399/C
//sol 
import java.awt.*;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Scanner;
import java.util.StringTokenizer;
import java.util.*;
 
public class Main{
 
    //class to take fast input for CP :)
    static class FastReader {
        BufferedReader br;
        StringTokenizer st;
 
        public FastReader()
        {
            br = new BufferedReader(
                    new InputStreamReader(System.in));
        }
 
        String next()
        {
            while (st == null || !st.hasMoreElements()) {
                try {
                    st = new StringTokenizer(br.readLine());
                }
                catch (IOException e) {
                    e.printStackTrace();
                }
            }
            return st.nextToken();
        }
 
        int nextInt() { return Integer.parseInt(next()); }
 
        long nextLong() { return Long.parseLong(next()); }
 
        double nextDouble()
        {
            return Double.parseDouble(next());
        }
 
        String nextLine()
        {
            String str = "";
            try {
                str = br.readLine();
            }
            catch (IOException e) {
                e.printStackTrace();
            }
            return str;
        }
    }
 
 
    //start from here
 
    public static void main(String[] args) {
        FastReader sc = new FastReader();
        int tt = sc.nextInt();
        for(int t = 0 ; t < tt ; t++){
           int n = sc.nextInt();
           int ans = 0;
           int arr[] = new int[n];
           for(int i = 0 ; i < n ; i ++)
               arr[i] = sc.nextInt();
           Arrays.sort(arr);
           for(int k = 1 ; k < 101 ; k ++){
               int i= 0 ; int j = n-1 ; int cnt= 0;
               while(i < j){
                   if(arr[i] + arr[j] == k){
                       i++;j--;cnt++;
                   }else if(arr[i] + arr[j] > k){
                       j--;
                   }else{
                       i++;
                   }
               }
               ans  = Math.max(ans,cnt);
           }
           System.out.println(ans);
        }
    }
}