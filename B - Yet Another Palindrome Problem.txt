//link => https://codeforces.com/contest/1324/problem/B
//sol
import java.awt.*;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Scanner;
import java.util.StringTokenizer;
import java.util.*;
 
public class Main{
 
    //class to take fast input for CP :)
    static class FastReader {
        BufferedReader br;
        StringTokenizer st;
 
        public FastReader()
        {
            br = new BufferedReader(
                    new InputStreamReader(System.in));
        }
 
        String next()
        {
            while (st == null || !st.hasMoreElements()) {
                try {
                    st = new StringTokenizer(br.readLine());
                }
                catch (IOException e) {
                    e.printStackTrace();
                }
            }
            return st.nextToken();
        }
 
        int nextInt() { return Integer.parseInt(next()); }
 
        long nextLong() { return Long.parseLong(next()); }
 
        double nextDouble()
        {
            return Double.parseDouble(next());
        }
 
        String nextLine()
        {
            String str = "";
            try {
                str = br.readLine();
            }
            catch (IOException e) {
                e.printStackTrace();
            }
            return str;
        }
    }
 
 
    //start from here
 
    public static void main(String[] args) {
        FastReader sc = new FastReader();
        int tt = sc.nextInt();
        for(int t = 0 ; t < tt ; t++){
            int l = sc.nextInt();
            boolean ans = false;
            int arr[] = new int[l];
            for(int i = 0; i < l ; i++){
                arr[i] = sc.nextInt();
            }
            int max = 0;
            HashMap<Integer,Integer> map = new HashMap<Integer,Integer>();
            ArrayList<Integer> uniq = new ArrayList<Integer>();
            for(int i = 0 ; i < l ; i++ ){
                if(map.containsKey(arr[i])){
                    map.put(arr[i],map.get(arr[i])+1);
                    max = Math.max(max,map.get(arr[i]));
                    if(arr[i]  != arr[i-1]){
                        ans = true;
                        break;
                    }
                    if(max >= 3){
                        ans = true;
                        break;
                    }
                }else{
                    map.put(arr[i],1);
                }
            }
            if(ans){
                System.out.println("YES");
            }else{
                System.out.println("NO");
            }
        }
    }
}