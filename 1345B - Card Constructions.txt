//link => https://codeforces.com/problemset/problem/1345/B
//sol 
//package com.company;
import java.awt.*;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Scanner;
import java.util.StringTokenizer;
import java.util.*;

public class Main {

    //class to take fast input for CP :)
    static class FastReader {
        BufferedReader br;
        StringTokenizer st;

        public FastReader() {
            br = new BufferedReader(
                    new InputStreamReader(System.in));
        }

        String next() {
            while (st == null || !st.hasMoreElements()) {
                try {
                    st = new StringTokenizer(br.readLine());
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            return st.nextToken();
        }

        int nextInt() {
            return Integer.parseInt(next());
        }

        long nextLong() {
            return Long.parseLong(next());
        }

        double nextDouble() {
            return Double.parseDouble(next());
        }

        String nextLine() {
            String str = "";
            try {
                str = br.readLine();
            } catch (IOException e) {
                e.printStackTrace();
            }
            return str;
        }
    }

    public static int pyramid(int num){
        ArrayList<Integer> dp = new ArrayList<>();
        dp.add(2);
        num -= 2;
        while(num > 0){
            int temp = dp.get(dp.size()-1)+3;
            if(num - temp < 0){
//                System.out.println(dp);
                return num;
            }
            dp.add(temp);
            num -= temp;
        }
        return num;
    }

    public static void main(String[] args) {
        FastReader sc = new FastReader();
        int t = sc.nextInt();
        while(t--> 0){
            int num = sc.nextInt();
            int ans = 0;
            while(num > 0){
                int k = pyramid(num);
                if(k < 0){
                    break;
                }
                ans ++;
                num = k;
            }
            System.out.println(ans);
        }

    }
}






